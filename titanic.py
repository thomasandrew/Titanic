# -*- coding: utf-8 -*-
"""titanic.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k-pMOlIZ7AZM61BOIwWTDvbfFMhlaHwK
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.ticker import MultipleLocator
import seaborn as sns
import plotly.express as px

df = pd.read_csv('titanic.csv')
df.head()

"""#Cleaning the Data:"""

df.isna().any()

df.dropna(subset=['Age'], inplace=True)
df['Cabin'].fillna(0, inplace=True)
df['Embarked'].fillna(0, inplace=True)

df.head(50)

df.isna().any()

df.head()

df.shape

df.describe()

df.dtypes

df['Age'] = df['Age'].apply(np.int64)
df['Age'].head()

"""#Oldest person who was on the Titanic:"""

df['Age'].idxmax()

df.loc[630]

"""#Youngest person who was on the Titanic:"""

df['Age'].idxmin()

df.loc[78]

"""#Number of ages of people who were on the Titanic:"""

age = df.value_counts('Age')
age

plt.figure(figsize=(15, 6))
plt.bar(age.index, age.values, color='green')
plt.title('Number of ages of people who were on the Titanic')
plt.ylabel('Count')
plt.xlabel('Age')
plt.yticks(np.arange(0, 32, step=10))

plt.gca().xaxis.set_major_locator(MultipleLocator(5))

plt.grid(True, color='gray', linestyle='--', alpha=0.7)

plt.show()

"""#Number of men and women who were on the Titanic:"""

sex_count = df.value_counts('Sex')
print(sex_count)

def m_w(val):
    total = sum(sex_count.values)
    res = val * total / 100
    return int(res)

plt.figure(figsize=(9, 6))
plt.pie(sex_count, labels=sex_count.index, autopct=m_w, textprops={'fontsize': 11})
plt.title('Number of men and women who were on the Titanic')

plt.show()

"""#Number of men and women who survived:"""

sur = df[(df['Survived'] == 1) & ((df['Sex'] == 'male') | (df['Sex'] == 'female'))]
sur

m_w_survived = sur.groupby('Sex').agg({'Survived': pd.Series.count}).reset_index()
m_w_survived

sns.catplot(x='Sex', y='Survived', kind='bar', hue='Sex', palette='husl', data=m_w_survived, height=6)
plt.title('Number of men and women who survived')

plt.show()

"""#Number of men and women who did not survive:"""

df.head()

m_w_d = df[(df['Survived'] == 0 & ((df['Sex'] == 'male') | (df['Sex'] == 'female')))]
m_w_d

get_m_w_d = m_w_d.groupby('Sex').agg({'Survived': pd.Series.count}).reset_index()
get_m_w_d

sns.catplot(x='Survived', y='Sex', kind='bar', hue='Sex', palette=sns.color_palette(['yellow', 'green']), data=get_m_w_d, height=6)
plt.title('Number of men and women who did not survive')

plt.show()

df.head()

df.groupby(['Sex', 'Pclass']).agg({'Age': pd.Series.count})

box = px.box(df, x='Pclass', y='Age', color='Sex' , notched=True, points='all', height=550, title='"Age Distribution Across Passenger Classes by Gender')
box.update_layout(yaxis=dict(type='linear'))

box.show()